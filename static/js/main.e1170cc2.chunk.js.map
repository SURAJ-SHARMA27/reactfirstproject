{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","useState","btnmode","setbtnmode","navclass","setnavclass","btnredmode","setbtnredmode","funci","mode","toggleMode","kit","redMode","toggleredMode","className","style","backgroundColor","id","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","link","onClick","role","htmlFor","TextForm","run","bold","setbold","ita1","setita1","text","setText","i","count","length","color","redmode","heading","fontStyle","fontWeight","value","onChange","event","target","rows","disabled","console","log","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setredMode","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e1170cc2.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {FaRedhat} from 'react-icons/fa';\r\n/* import {Link} from 'react-router-dom';\r\n */\r\n\r\n\r\nexport default function Navbar(props) {\r\n  const [btnmode, setbtnmode] = useState(\"Enable dark Mode\")\r\n  const [navclass, setnavclass] = useState(\"rgb(200, 236, 200)\")\r\n  const [btnredmode, setbtnredmode] = useState(\"Enable ultradark Mode\")\r\n  //co//nst navclas=()=>{\r\n    ////if(props.redmode==='ultradark')\r\n   //// {\r\n   //// setnavclass(\"#e3f2fd\")\r\n // }\r\n  //else if(props.mode==='dark')\r\n//{//\r\n  ////  setnavclass(\"grey\")\r\n  ////}\r\n //// else{\r\n ////   setnavclass(\"blue\")\r\n //// }\r\n // }\r\n  \r\n  const func=()=>{\r\n    if(props.mode==='dark'){\r\n    setbtnmode(\"Enable dark Mode\")\r\n    setnavclass(\"rgb(200, 236, 200)\")\r\n  }\r\n  else{\r\n  \r\n    setnavclass(\"rgb(0, 12, 29)\")\r\n  setbtnmode(\"Enable light Mode\")\r\n}\r\n  }\r\n \r\n  const funct=()=>{\r\n    if(props.redMode==='ultradark'){\r\n    setbtnredmode(\"Enable ultradark Mode\")\r\n    setnavclass(\"rgb(201, 201, 201)\")\r\n  }\r\n  else{\r\n  \r\n    setnavclass(\"rgb(58, 8, 6)\")\r\n  setbtnredmode(\"Enable light Mode\")\r\n}\r\n  }\r\n  const funci=()=>{\r\nfunc();\r\nprops.toggleMode();\r\n\r\n  }\r\n  const kit=()=>{\r\n    funct();\r\n    props.toggleredMode();\r\n    \r\n      }\r\n\r\n    return (\r\n      \r\n    \r\n     \r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode}`} style={{backgroundColor:`${navclass}`}} id=\"nav\" >\r\n      <div className=\"container-fluid\" >\r\n        <span className=\" larg mx-4\"><FaRedhat/></span>\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\"> \r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\"> \r\n         {/*  <a className=\"nav-link active\" aria-current=\"page\" to=\"/About\">About</a>\r\n        */} </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">{props.link}</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <a href=\"/\" className=\"nav-link disabled\">Disabled</a> */}\r\n        </li>\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={kit} type=\"checkbox\" role=\"switch\" id=\"ultra\"/>\r\n  <label className=\"form-check-label\" onClick={kit} htmlFor=\"ultra\">{btnredmode}</label>\r\n</div>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={funci}  type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" onClick={funci} htmlFor=\"flexSwitchCheckDefault\">{btnmode}</label>\r\n</div>\r\n\r\n \r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps={\r\n    title:'SURAJ',\r\n    aboutText:'About text here'\r\n};","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const [bold, setbold] = useState(\"400\")\r\n  \r\n\r\n  const [ita1, setita1] = useState(\"normal\")\r\n\r\n  const handleUpClick =()=>{\r\n    console.log(\"Uppercase was clicked\"+text);\r\n    let newText=text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\",\"success\");\r\n  }\r\n  const handleLoClick =()=>{\r\n    console.log(\"LOWERcase was clicked\"+text);\r\n    let newText=text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\",\"success\");\r\n  }\r\n  const handleClClick =()=>{\r\n    console.log(\"clear was clicked\"+text);\r\n    let newText=\" \";\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared!\",\"success\");\r\n  }\r\n  const handleCopy=()=>{\r\n    var text=document.getElementById(\"txt\")\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Copied to clipboard\",\"success\");\r\n  }\r\n  const handlebold=()=>{\r\n    setbold(\"900\");\r\n    props.showAlert(\"Converted to BOLD\",\"success\");\r\n    \r\n  \r\n  }\r\n  const handleita=()=>{\r\n    setita1(\"italic\");\r\n    \r\n    props.showAlert(\"Converted to ITALICS\",\"success\");\r\n  }\r\n // const handleSearchClick =()=>{\r\n   // let str =document.getElementById(\"word\");\r\n   // console.log(str.value);\r\n   // let search=str.value;\r\n   // console.log(search);\r\n   //  let para={text};\r\n   //  let texta =  JSON.stringify(para);\r\n    // console.log(texta);\r\n    // console.log(texta.indexOf(search))\r\n     //\r\n    //  let st=document.getElementById(\"rk\");\r\n   // st.innerText=texta.indexOf(search);\r\n         // let newText=\" \";\r\n   // setText(newText);\r\n  //}\r\n  const handleOnChange =(event)=>{\r\n    setText(event.target.value);\r\n  }\r\n  const handleremove=()=>{\r\n    let newText=text.split(/[ ]+/);\r\n  setText(newText.join(\" \"))\r\n  props.showAlert(\"EXTRA SPACE REMOVED\",\"success\");\r\n  } \r\n\r\n    const [text,setText]=useState('');\r\n \r\n \r\n    let i=0,count=0;\r\n    let run;\r\n    for(i=0;i<text.length;i++){\r\n      if(text[i]==\" \"){\r\ncount++;\r\n      }\r\n    }\r\n    run=text.length-count;\r\n    return (\r\n      <>\r\n      \r\n \r\n        <h1 style={{color:props.mode==='dark'?'greenyellow':'rgb(49, 37, 38)'}||{color:props.redmode==='ultradark'?'black':'rgb(49, 37, 38)'}} id=\"head\" >{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  \r\n \r\n  <textarea className=\"form-control area\" style={{backgroundColor:props.mode==='dark'?'#13466E':'white',color:props.mode==='dark'?'white':'black' ,fontStyle:ita1, fontWeight:bold}}  value={text} onChange={handleOnChange} id=\"txt\" rows=\"8\"></textarea>\r\n</div>\r\n<div className=\"container  col-sm-12 \" >\r\n  \r\n  \r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}\r\n        >convert to uppercase\r\n        \r\n        </button>\r\n             <button disabled={text.length===0} className=\"btn btn-warning mx-2 my-2\" onClick={handleLoClick}\r\n        >convert to lowercase</button>\r\n          <button disabled={text.length===0} className=\"btn btn-danger mx-2 my-2\" onClick={handleClClick}\r\n        >clear text</button>\r\n       \r\n        <button disabled={text.length===0} className=\"btn btn-info mx-2 my-2\" onClick={handleCopy}\r\n        >Copy</button>\r\n             <button disabled={text.length===0}className=\"btn btn-success mx-2 my-2\" onClick={handlebold}\r\n        >Bold</button>\r\n         <button disabled={text.length===0}className=\"btn btn-dark mx -2 my-2\" onClick={handleita}\r\n        >Italic</button>\r\n        <button disabled={text.length===0} className=\"btn btn-secondary mx-2 my-2\" onClick={handleremove}\r\n        >Remove Space</button>\r\n        </div>\r\n    \r\n        <div className=\"container my-4\">\r\n          \r\n          <h4 id=\"top\">Your text summary</h4>\r\n          \r\n          \r\n          <p id=\"white\" style={{color:props.mode==='dark'?'white':'black'}}> {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {run} characters</p>\r\n          <p id=\"white\" style={{color:props.mode==='dark'?'white':'black'}}>{0.008* text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes read</p>\r\n          \r\n      \r\n  <h4 id=\"top\">Preview</h4>\r\n          <p id=\"white\" style={{color:props.mode==='dark'?'white':'black'}}>{text.length>0?text:\"ENTER SOMETHING IN THE TEXTBOX ABOVE TO PREVIEW IT HERE\"}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n\r\n        \r\n    }\r\n    \r\n\r\n    return (<div style={{height:'50px'}}>\r\n      {  props.alert && \r\n        <div>\r\n             <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n</div>        \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n"," \nimport './App.css';\nimport About from './components/About'\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\n//import {FcApproval} from 'react-icons/fc';\n import React, { useState } from 'react'\n import Alert from './components/Alert';\n //import {\n // BrowserRouter as Router,\n // Switch,\n  //Route,\n  \n//} from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [redMode, setredMode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const showAlert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    } )\n    setTimeout(()=>{\n      setalert(null);\n    },1500);\n  }\nconst toggleMode=()=>{\n  if(mode==='light'){\n  setMode('dark');\n\n  document.body.style.backgroundColor='rgb(26, 36, 51)';\nshowAlert(\"DARK MODE is enabled\",\"success\");\n}\nelse{\n  setMode('light');\n  document.body.style.backgroundColor='white';\n  showAlert(\"LIGHT MODE is enabled\",\"success\");\n  \n}\n}\nconst toggleredMode=()=>{\n  if(redMode==='light'){\n  setredMode('ultradark');\n  setMode('dark');\n  document.body.style.backgroundColor='rgb(0, 0, 0)';\nshowAlert(\"ULTRADARK MODE is enabled\",\"success\");\n}\nelse{\n  setredMode('light')\n  setMode('light');\n  document.body.style.backgroundColor='white';\n  showAlert(\"LIGHT MODE is enabled\",\"success\");\n}\n}\n  return (\n <>\n{/*  <Router> */}\n{/* <Navbar title=\"options\" link=\"click for more\"/>*/}\n<Navbar mode={mode} toggleMode={toggleMode} redMode={redMode} toggleredMode={toggleredMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n <TextForm showAlert={showAlert} mode={mode} heading=\"ENTER THE TEXT TO ANALYZE\"/>\n \n {/* <Switch> */}\n     {/*      <Route exact path=\"/about\">\n            <About />\n          </Route>\n          \n          <Route exact path=\"/\"> */}\n           {/*  <TextForm />\n          </Route>\n        </Switch> */}\n        </div>\n{/*    </Router> */}\n\n\n </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}